基本环境配置

首先，要保证防火墙对3306端口的开启，（开启方式，请参考：[http://blog.csdn.net/xlgen157387/article/details/49964557]），如果只是为了学习数据库的主从配置，可以使用service iptables stop 命令直接关闭防火墙。

然后可以在两台机子之间进行 ping操作，确保两台机器之间能够相同。

1.主数据库master配置：

(1)修改my.ini（my.cnf）文件

log-bin=mysql-bin
server-id=2
binlog-ignore-db=information_schema
binlog-ignore-db=cluster
binlog-ignore-db=mysql
binlog-do-db=test

这里的server-id用于标识唯一的数据库，这里设置为2，在设置从库的时候就需要设置为其他值。

binlog-ignore-db：表示同步的时候ignore的数据库 
binlog-do-db：指定需要同步的数据库

(2)重启mysql：service mysqld restart

(3)进入mysql：[root@VM_221_4_centos ~]# mysql -u root -p 回车，输入mysql密码进入。

(4)赋予从库权限帐号，允许用户在主库上读取日志，赋予192.168.1.2也就是Slave机器有File权限，只赋予Slave机器有File权限还不行，还要给它REPLICATION SLAVE的权限才可以。

在Master数据库命令行中输入：

GRANT FILE ON *.* TO 'root'@'192.168.1.2' IDENTIFIED BY 'mysql password';

GRANT REPLICATION SLAVE ON *.* TO 'root'@'192.168.1.2' IDENTIFIED BY 'mysql password';

FLUSH PRIVILEGES

注：flush privileges 命令本质上的作用是将当前user和privilige表中的用户信息/权限设置从mysql库(MySQL数据库的内置库)中提取到内存里。MySQL用户数据和权限有修改后，希望在"不重启MySQL服务"的情况下直接生效，那么就需要执行这个命令。通常是在修改ROOT帐号的设置后，怕重启后无法再登录进来，那么直接flush之后就可以看权限设置是否生效。而不必冒太大风险。

(5)重启mysql，登录mysql，显示主库信息

mysql> show master status;

+------------------+----------+--------------+----------------------------------+-------------------+
| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                 | Executed_Gtid_Set |
+------------------+----------+--------------+----------------------------------+-------------------+
| mysql-bin.000004 |    28125 | test         | information_schema,cluster,mysql |                   |
+------------------+----------+--------------+----------------------------------+-------------------+
1 row in set (0.00 sec)

这里的 File 、Position 是在配置Salve的时候要使用到的，Binlog_Do_DB表示要同步的数据库，Binlog_Ignore_DB 表示Ignore的数据库，这些都是在配置的时候进行指定的。

另外：如果执行这个步骤始终为Empty set(0.00 sec)，那说明前面的my.cnf没配置对。

2.从数据库Slave的配置

(1)从库的配置，首先也是修改配置文件：/etc/my.cnf 如下：

log-bin=mysql-bin
server-id=3
binlog-ignore-db=information_schema
binlog-ignore-db=cluster
binlog-ignore-db=mysql
replicate-do-db=ufind_db
replicate-ignore-db=mysql
log-slave-updates
slave-skip-errors=all
slave-net-timeout=60

(2)在MySQL5.6之后的版本中没有指定：

master-host=192.168.1.1 #Master的主机IP
master-user=root
master-password=mysql password #Master的MySQL密码

如果，你在MySQL5.6和之后的版本中配置从库的时候，设置到了上边的内容，即指定了master-host、master-user等信息的话，重启MySQL的时候就回报错，错误信息如下：

[root@VM_128_194_centos bin]# service mysqld restart
Shutting down MySQL... SUCCESS! 
Starting MySQL... ERROR! The server quit without updating PID file (/data/mysqldb/VM_128_194_centos.pid).
[root@VM_128_194_centos bin]# 

此时，查看数据库的报错信息（数据库的目录, /data/mysqldb/VM_128_194_centos.err ），可以看到：

2016-05-06 13:12:04 13345 [Note] InnoDB: Waiting for purge to start
2016-05-06 13:12:04 13345 [Note] InnoDB: 5.6.27 started; log sequence number 2850211
2016-05-06 13:12:04 13345 [ERROR] /data/home/server/mysql-5.6.27/bin/mysqld: unknown variable 'master-host=192.168.1.1'
2016-05-06 13:12:04 13345 [ERROR] Aborting

可以看出master-host 被检测数是一个未知的变量，因此会出现错误。

(3)在5.6以及后续版本的配置如下：

修改完/etc/my.cnf 文件之后，重启一下MySQL（service mysqld restart）

进入Slave mysql控制台，执行：

mysql> stop slave;  #关闭Slave
mysql> change master to master_host='192.168.1.1',master_user='root',master_password='123456',master_log_file='mysql-bin.000004', master_log_pos=28125;
mysql> start slave;  #开启Slave

在这里指定Master的信息，master_log_file是在配置Master的时候的File选项， master_log_pos是在配置Master的Position 选项，这里要进行对应。

然后可以通过mysql> show slave status; 查看配置的信息：